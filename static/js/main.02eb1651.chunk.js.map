{"version":3,"sources":["components/ProjectInfo.js","images/AddPersonIcon.svg","images/Clip.svg","components/UserMesage.js","components/CommentList.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectInfo","useState","open","setOpen","className","onClick","UserMessages","detal_user_info","src","avatar","alt","name","message","sendMessageTime","CommentList","props","AddPersonIcon","totalUsers","map","user","placeholder","type","Clip","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGe,SAASA,IACvB,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASC,OACC,cAAC,WAAD,UACC,sBAAKC,UAAU,uBAAf,UACE,oBAAGA,UAAU,uBAAb,iNAGa,IAATF,EACA,mBAAGE,UAAU,kBAAkBC,QAdf,WACtBF,GAAQ,IAaF,uBAED,mBAAGE,QAbc,WACvBF,GAAQ,IAYF,gRAKA,yBAAQC,UAAU,iBAAlB,UACE,cAAC,IAAD,CAAmBA,UAAU,yBAC9B,4BAAG,+DC7BE,UAA0B,0CCA1B,MAA0B,iCCG1B,SAASE,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,gBAGpC,OACC,cAAC,WAAD,UACC,sBAAKH,UAAU,gBAAf,UACC,sBAAKA,UAAU,wBAAf,UACC,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAMI,IAAKD,EAAgBE,OAAQC,IAAI,OAExD,sBAAKN,UAAU,sBAAf,UACC,4BAAG,4BAAIG,EAAgBI,SACvB,4BAAIJ,EAAgBK,gBAIrB,qBAAKR,UAAU,8BAAf,SACC,+BAAOG,EAAgBM,yBCff,SAASC,EAAYC,GAClC,OACC,cAAC,WAAD,UACA,sBAAKX,UAAU,0BAAf,UACC,sBAAKA,UAAU,uBAAf,UACE,0CACA,qBAAKI,IAAKQ,EAAeN,IAAI,QAE/B,qBAAKN,UAAU,qBAAf,SACEW,EAAME,WAAWC,KAAI,SAAAC,GACnB,OACA,cAAC,EAAD,CAAaZ,gBAAiBY,SAKlC,sBAAKf,UAAU,6BAAf,UACE,0BAAUA,UAAU,yBAAyBgB,YAAY,0BACzD,uBAAOhB,UAAU,4BAA4BiB,KAAK,QAAQb,IAAKc,YCJtDC,MAhBf,WAQE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACU,EAAD,CAAaG,WATI,CACnB,CAACR,OAAQ,yBAA2Be,GAAG,EAAGb,KAAM,gBAAiBC,QAAS,4BAA6BC,gBAAiB,YACxH,CAACJ,OAAQ,uBAAwBe,GAAG,EAAGb,KAAM,oBAAqBC,QAAS,wNAAyNC,gBAAiB,mBCK1SY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02eb1651.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\n\r\nexport default function ProjectInfo() {\r\n const [open, setOpen] = useState(false);\r\n\r\n  const ShowInformation = () => {\r\n    setOpen(true);\r\n  };\r\n  const HideInformation = () => {\r\n   setOpen(false);\r\n };\r\n\r\n  return (\r\n   <Fragment>\r\n    <div className=\"info-page__container\"  >\r\n      <p className='info-page__paragraph'>Hey! Thank for jumping on the project. So for today  we need to finish the Shareholders \r\n         Document Analysis. I have left all the key points to consider in the tasks tab. There are\r\n         just two crucial.  \r\n         {open === false?\r\n          <a className=\"info-page__link\" onClick={ShowInformation}>Read more</a>\r\n         :\r\n         <p onClick={HideInformation}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsa id impedit at dolorum, beatae necessitatibus corporis, \r\n           tempora sapiente quos officiis labore itaque aliquam debitis praesentium quam ex animi optio distinctio obcaecati,\r\n           reprehenderit quisquam.</p>\r\n         }\r\n         </p>\r\n         <button className='info-page__btn'>\r\n           <AddBoxRoundedIcon className='info-page__btn__plus' />\r\n          <p><b>Create a DELIVERABLE</b></p>\r\n         </button>\r\n    </div>\r\n   </Fragment>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/AddPersonIcon.c97d8ad4.svg\";","export default __webpack_public_path__ + \"static/media/Clip.fdfbf271.svg\";","import React, {Fragment} from 'react'\r\n\r\n\r\nexport default function UserMessages({detal_user_info}) {\r\n\r\n\r\n  return (\r\n   <Fragment>\r\n    <div className=\"user-messages\">\r\n     <div className=\"user-messages__avatar\">\r\n      <div className=\"user-messages__img\">\r\n        <img className='img' src={detal_user_info.avatar} alt=\"\" />\r\n      </div>\r\n      <div className=\"user-messages__text\">\r\n       <p><b>{detal_user_info.name}</b></p>\r\n       <p>{detal_user_info.message}</p>\r\n      </div>\r\n     </div>\r\n\r\n      <div className=\"user-messages__sending-time\">\r\n       <span>{detal_user_info.sendMessageTime}</span>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n  )\r\n}","import React, {Fragment} from 'react'\r\nimport AddPersonIcon from '../images/AddPersonIcon.svg'\r\nimport Clip from '../images/Clip.svg'\r\nimport UserMessage from './UserMesage'\r\n\r\nexport default function CommentList(props) {\r\n  return (\r\n   <Fragment>\r\n   <div className=\"comment-list__container\">\r\n    <div className=\"comment-list__header\">\r\n      <h2>Comments</h2>\r\n      <img src={AddPersonIcon} alt=\"\" />\r\n    </div>\r\n    <div className=\"comment-list__body\">\r\n    { props.totalUsers.map(user => {\r\n        return (   \r\n        <UserMessage detal_user_info={user}/>\r\n        )\r\n       })\r\n      }\r\n    </div>\r\n    <div className=\"comment-list__input-futter\">\r\n      <textarea className='comment-list__textarea' placeholder='Your message here... '></textarea>\r\n      <input className='comment-list__input-image' type=\"image\" src={Clip} />\r\n    </div>\r\n   </div>\r\n  </Fragment>\r\n  )\r\n}","import ProgectInfo from './components/ProjectInfo'\nimport CommentList from './components/CommentList'\n\nfunction App() {\n  \n  const persons_chat = [\n    {avatar: './images/UserWoman.png',  id:1, name: 'Anna Petrenko', message: 'Hey! What about deadline?', sendMessageTime: '11:31 am'},\n    {avatar: './images/UserMan.png', id:2, name: 'Nick Konstantinov', message: 'Hey! Thank for jumping on the project. So for today we need to finish the Shareholders Document Analysis. I have left all the key points to consider in the tasks tab. There are just two crucial points to consider.', sendMessageTime: '09:31 am'}\n    \n  ]\n\n  return (\n    <div className=\"App\">\n      <ProgectInfo />\n      <CommentList totalUsers={persons_chat} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}